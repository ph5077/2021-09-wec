------------------------------------------------------------------------------------
Search & Replace
------------------------------------------------------------------------------------
  :range s[ubstitute]/pattern/string/cgiI
------------------------------------------------------------------------------------
    c   Confirm each substitution
    g   Replace all occurrences in the line (without g - only first).
    i   Ignore case for the pattern.
    I   Don't ignore case for the pattern.

------------------------------------------------------------------------------------
Range of Operation, Line Addressing and Marks
------------------------------------------------------------------------------------
Specifier         Description
------------------------------------------------------------------------------------

  number            an absolute line number
  .                 the current line
  $                 the last line in the file
  %                 the whole file. The same as 1,$
  't                position of mark "t"
  /pattern[/]       next line where text "pattern" matches.
  ?pattern[?]       previous line where text "pattern" matches
  \/                next line where the previously used search pattern matches
  \?                previous line where the previously used search pattern matches
  \&                next line where the previously used substitute pattern matches

  no line range     the current line only.

  EXAMPLES:

  10,20
      from 10 to 20 line.

  /Section 1/+,/Section 2/-
      all lines between Section 1 and Section 2, non-inclusively

  /Section 1/;/Subsection/-,/Subsection/+     
      first find Section 1, then the first line with Subsection, step one line down (beginning of the range) and
      find the next line with Subsection, step one line up (end of the range).

  :/Section/+ y
      search for the Section line and yank (copy) one line after into the memory.
  :// normal p
      search for the next Section line and put (paste) the saved text on the next line.
  	
------------------------------------------------------------------------------------
metacharacters
------------------------------------------------------------------------------------

  .     any character except new line 	  	 
  \s    whitespace character 	
  \S    non-whitespace character
  \d    digit 	
  \D    non-digit
  \x    hex digit 	
  \X    non-hex digit
  \o    octal digit 	
  \O    non-octal digit
  \h    head of word character (a,b,c...z,A,B,C...Z and _) 	
  \H    non-head of word character
  \p    printable character 	
  \P    like \p, but excluding digits
  \w    word character 	
  \W    non-word character
  \a    alphabetic character 	
  \A    non-alphabetic character
  \l    lowercase character 	
  \L    non-lowercase character
  \u    uppercase character 	
  \U    non-uppercase character

  \d\d/\d\d/\d\d\d\d
        09/01/2000 (assuming you don't use "/" as a separator in the S&R)

  \u\w\w\w\w\w
        6 letter word starting with a capital letter

------------------------------------------------------------------------------------
Quantifiers, Greedy and Non-Greedy
------------------------------------------------------------------------------------

  *         matches 0 or more of the preceding characters, ranges or metacharacters .* matches everything including empty line
  \+        matches 1 or more of the preceding characters...
  \=        matches 0 or 1 more of the preceding characters...
  \{n,m}    matches from n to m of the preceding characters...
  \{n}      matches exactly n times of the preceding characters...
  \{,m}     matches at most m (from 0 to m) of the preceding characters...
  \{n,}     matches at least n of of the preceding characters...
            where n and m are positive integers (>0)
  \u\w\+.
      a word of any length

Non-greedy quantifiers:
  \{-}      matches 0 or more of the preceding atom, as few as possible
  \{-n,m}   matches 1 or more of the preceding characters...
  \{-n,}    matches at lease or more of the preceding characters...
  \{-,m}    matches 1 or more of the preceding characters...
            where n and m are positive integers (>0)

------------------------------------------------------------------------------------
Character ranges
------------------------------------------------------------------------------------

  [012345], [0-5]   match any of the numbers inside the brackets.
  [a-z]             all lowercase letters
  [a-zA-Z]          all letters
  [0-9a-zA-Z]       letters and digits
  /[^A-Z]/          any character except capital letters.

  Note: 
    1. Inside [ ] all metacharacters behave like ordinary characters.
    2. "^" will lose its special meaning if it's not the first character in the range.
    3. To include "-" (dash) in your range put it first
        /[-0-9]/    match all digits and -

------------------------------------------------------------------------------------
Grouping and Backreferences
------------------------------------------------------------------------------------

  "\(" and "\)" and \1, \2 ... \9. 
  s:\(\w\+\)\(\s\+\)\(\w\+\):\3\2\1:
      swapping first two words of the line

  Replacement Part of :substitute

  &     the whole matched pattern 	
  \L    the following characters are made lowercase
  \0    the whole matched pattern 	
  \U    the following characters are made uppercase
  \1    the matched pattern in the first pair of \(\) 	
  \E    end of \U and \L
  \2    the matched pattern in the second pair of \(\) 	
  \e    end of \U and \L
  ...
  	... 	
  \r    split line in two at this point
  \9    the matched pattern in the ninth pair of \(\) 	
  \l    next character made lowercase
  ~     the previous substitute string 	
  \u    next character made uppercase

  s:\([.!?]\)\s\+\([a-z]\):\1  \u\2:g
      to correct non-capital words at the beginning of the sentences looks like

------------------------------------------------------------------------------------
Alternations
------------------------------------------------------------------------------------
  EX:
  /next\|line\|letters

  	
------------------------------------------------------------------------------------
Global search and execution
------------------------------------------------------------------------------------

  :range g[lobal][!]/pattern/cmd
      exec cmd (default ":p") on the lines within [range] where pattern matches.
      ! - only where match does not occur.
      cmd:
        s[ubstitute], :co[py] , :d[elete], :w[rite]
        :norm[al]non-ex command   // Non-Ex commands (normal mode commands) can be also executed


  :g/^$/ d
      delete all empty lines in a file


  :g/^$/,/./-j
      reduce multiple blank lines to a single blank
      range:  from empty line /^$/ to non-empty line /./
      cmd:    back one line, join


  :10,20g/^/ mo 10
      reverse the order of the lines starting from the line 10 up to the line 20.
      mo 10: move line to 10


  :'a,'b g/^Error/ . w >> errors.txt
      block marked by 'a and 'b
      all lines starting with Error
      copy (append) them to "errors.txt" file


  :g/^Error:/ copy $ | s /Error/copy of the error/
      copy all Error line to the end of the file
      make a substitution in the copied line.
      Without giving the line address :s will operate on the current line, which is the newly copied line.


  :g/^Error:/ s /Error/copy of the error/ | copy $
      modify the string
      copy to the end


  :s:\s*$::
  :s:\s\+$::
      del the blanks at the end of the line

